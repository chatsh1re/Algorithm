{
	// Place your algorithm workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"init": {
		"prefix": "start",
		"body": [
			"#if __GNUC__ && !__clang__",
			"#include <bits/stdc++.h>",
			"#else  // __clang__",
			"#include <algorithm>",
			"#include <iostream>",
			"#endif  // gcc or not",
			"",
			"using namespace std;",
			"int main(){",
			"cout.tie(nullptr);",
			"cin.tie(nullptr)->ios::sync_with_stdio(false);",
			"}"
		],
	},
	"benchmark" : {
		"prefix" : "benchmark",
		"body":[
			"{",
	    "auto start = chrono::steady_clock::now();",
			"/* Insert Your First Test Cases */ ",
			"$1",
	    "auto end = chrono::steady_clock::now();",
	    "cout << \"Test Case #1 elapsed time: \" << chrono::duration_cast<chrono::nanoseconds>(end - start).count() << \" ns\" << endl;",
			"}",
			"{",
			"auto start = chrono::steady_clock::now();",
			"/* Insert Your Second Test Cases */ ",
			"$2",
			" auto end = chrono::steady_clock::now(); ",
	    "cout << \"Test Case #2 elapsed time: \" << chrono::duration_cast<chrono::nanoseconds>(end - start).count() << \" ns\" << endl;",
			"}",
		],
		"description": "Benchmark for each cases.",
	}
}